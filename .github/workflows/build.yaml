name: Node.js CI/CD Pipeline

on: push

jobs:
  scan:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Security Tools
        run: |
          TRIVY_VERSION=0.30.4
          TFSEC_VERSION=1.26.3
          GOSEC_VERSION=2.12.0

          # Install Trivy
          curl -o trivy.tar.gz -L https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz
          tar -xvf trivy.tar.gz
          sudo mv trivy /usr/local/bin

          # Install GoSec
          curl -o gosec.tar.gz -L https://github.com/securego/gosec/releases/download/v${GOSEC_VERSION}/gosec_${GOSEC_VERSION}_linux_amd64.tar.gz
          tar xvf gosec.tar.gz
          sudo mv gosec /usr/local/bin

          # Install TFSec
          curl -o tfsec -L https://github.com/aquasecurity/tfsec/releases/download/v${TFSEC_VERSION}/tfsec-linux-amd64
          chmod +x tfsec
          sudo mv tfsec /usr/local/bin

      - name: Cache Trivy DB
        uses: actions/cache@v2
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-db-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-trivy-db-

      - name: Scan with Trivy
        env:
          TRIVY_AUTH_TOKEN: ${{ secrets.GHCR_PAT }}
        run: |
          # Update Trivy DB if it needs to be
          trivy --quiet --cache-dir ~/.cache/trivy image --security-checks vuln,config,secret -s HIGH,CRITICAL --exit-code 1 izzmoqbel/devops_project

      - name: Scan Code with GoSec
        run: |
          gosec ./...

      - name: Scan Terraform with TFSec
        run: |
          tfsec -m HIGH

  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm install

  docker-build:
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t izzmoqbel/devops_project .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: docker push izzmoqbel/devops_project:latest

      - name: Scan Docker Image with Trivy
        env:
          TRIVY_AUTH_TOKEN: ${{ secrets.GHCR_PAT }}
        run: |
          # Check if the Trivy database needs updating and scan the Docker image
          trivy --quiet --cache-dir ~/.cache/trivy image --security-checks vuln,config,secret -s HIGH,CRITICAL --exit-code 1 izzmoqbel/devops_project
